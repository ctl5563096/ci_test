<?php declare(strict_types=1);


namespace App\Controllers;


use App\Common\RedisClient;
use App\Common\RestController;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;
use GatewayClient\Gateway;
use GatewayClient\GatewayProtocol;
use Psr\Log\LoggerInterface;

/**
 * websocket
 *
 * Class Websocket
 * @package App\Controllers
 */
class Websocket extends RestController
{
    public function initController(RequestInterface $request, ResponseInterface $response, LoggerInterface $logger)
    {
        parent::initController($request, $response, $logger); // TODO: Change the autogenerated stub
    }

    /**
     * Notes: 绑定客户端id和用户id
     *
     * Author: chentulin
     * DateTime: 2021/3/5 17:25
     * E-MAIL: <chentulinys@163.com>
     * @throws \Exception
     */
    public function bind()
    {
        $data = $this->request->getGet();
        if (isset($data['client_id']) || isset($data['user_id'])) {
            $this->respondApi(['code' => 10009, '无法获取参数id']);
        }
        Gateway::$registerAddress = '120.78.13.233:1238';
        // 利用redis保护client_id
        if (RedisClient::getInstance()->hexists('websocket', $data['user_id'])) {
            $client_id = RedisClient::getInstance()->hget('websocket', $data['user_id']);
            // 删除原本的哈希键
            RedisClient::getInstance()->hdel('websocket', $data['user_id']);
            // 存储新的客户端id
            RedisClient::getInstance()->hset('websocket', $data['user_id'], $data['client_id']);
            $data = json_encode([
                'type'         => 'onClose',
                'content'      => '{"type":"onClose","to_client_id":"' . $client_id . '","content":"退出系统"}',
                'to_client_id' => $client_id,
            ], JSON_UNESCAPED_UNICODE);
            // 去断开另外一个客户端
            $res = Gateway::sendToClient($client_id, $data);
            if (!$res) {
                return $this->respondApi(['code' => '10020', 'msg' => '系统错误,请联系管理员']);
            }
            return $this->respondApi(['status' => '500', 'msg' => '用户已经登录,即将退出异地登录']);
        }
        // 存到redis里面
        RedisClient::getInstance()->hset('websocket', $data['user_id'], $data['client_id']);
        return $this->respondApi(['status' => '200', 'msg' => '连接成功客户端']);
    }
}